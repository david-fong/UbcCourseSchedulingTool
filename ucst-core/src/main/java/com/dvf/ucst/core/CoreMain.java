package com.dvf.ucst.core;

import com.dvf.ucst.core.coursedata.CourseDataLocator;
import com.dvf.ucst.core.faculties.FacultyTreeNode;
import com.dvf.ucst.core.faculties.UbcCampuses;

import java.nio.file.Files;

/**
 * Fetches [Course] data from UBC's registration sites for [FacultyTreeNode]s
 * entered into this project's faculty tree system, and parses and stores their
 * data into xml files in the [genresource] folder for further (pre-deployment)
 * testing. Users will NOT be running this [main] class. They will be able to
 * refresh this data on their own at granularities of: campus, faculty, and by
 * course. The local data generated by this [main] method will be shipped with
 * the application when deployed, and will save developers from needing to fetch
 * data at the start of each test of the [main] class that users will be running.
 *
 * Intellij IDEA Run Configuration (Run > Edit Configurations... > [CoreMain]):
 * - Virtual Machine options: -enableassertions
 * - Working Directory: $MODULE_WORKING_DIR$
 */
public final class CoreMain {

    /**
     * TODO: create a file in the campus dir with the timestamp of last update of
     *  local data. each faculty should also have one if their timestamp differs
     *  from their parent's timestamp. NOTE: refreshing for a non-campus [Faculty
     *  TreeNode] does not refresh for its children nodes- only its courses.
     * @param args Commandline arguments.
     */
    public static void main(String[] args) {
        if (!Files.isDirectory(CourseDataLocator.StagedDataPath.PRE_DEPLOYMENT.path)) {
            throw new RuntimeException("could not get development path to generated resources");
        }
        System.out.println(CourseDataLocator.StagedDataPath.PRE_DEPLOYMENT.path);
        System.out.println(CourseDataLocator.StagedDataPath.POST_DEPLOYMENT.path);
        System.out.println(FacultyTreeNode.getSubTreeString(UbcCampuses.VANCOUVER));
    }

}
